---
description: 这是对作业要求的补充，教授给出了改进意见
globs: 
alwaysApply: false
---
HW1- Suggestion to Incorporate:

Final template repo should have only a small number of commits – ideally 1!
(otherwise everybody who is starting from it will inherit all that history).
Templates should not have a lot of branches (ideally 1).
For this template, have one closed PR that should include the whole code , so we can add review comments.
Give major attention to the directory structure(Ideally, the components should be inside src folder and each component in its own subdirectory)
Unit test cases should be near to the target component code
 E2e and integration test could be in the top level test folder
Proper readme file should be there, describing how to use the template(for eg., command indicating running single unit test).
The component.md should define the concept of components including directory structure.
There should be nothing extra that is not relevant to the template
Only include relevant entries in the .gitignore for this template; do not include unnecessary files (e.g., JavaScript-related ignores for python template).
Ensure to upload Ci/CD link with – 
Passed tests
Failed tests
Code coverage

Python specific guidelines:
Avoid separate ruff.toml file – use pyproject.toml
No pip install no venv
Use uv!
This is higher level than python, so it makes little sense to use python/pip to install uv itself
Always have  pytest – nose is extra credit. 
API is important and necessary!!
Either in __init__.py or in separate api.py
Each component should be a separate UV package
Own dependencies, etc.
Own pyproject.toml

C++ specific guidelines:
Use the right tighter integration with googletest in cmake.

