version: 2.1

orbs:
  python: circleci/python@1.2

commands:
  setup-env:
    steps:
      - checkout
      - run:
          name: Setup Python and install dependencies
          command: |
            curl -LsSf https://astral.sh/uv/install.sh | sh
            export PATH="$HOME/.local/bin:$PATH"
            uv venv
            uv pip install --group dev
            uv pip install -e mail_api
            uv pip install -e mail_gmail_impl
            uv pip install -e ai_conversation_client
            uv pip install -e mail_ai_spam_detector
            uv pip install -e tests

jobs:
  lint:
    docker:
      - image: cimg/python:3.11
    steps:
      - setup-env
      - run:
          name: Run ruff and mypy
          command: |
            uv run ruff check .
            uv run mypy mail_api mail_gmail_impl ai_conversation_client mail_ai_spam_detector

  unit-test:
    docker:
      - image: cimg/python:3.11
    steps:
      - setup-env
      - run:
          name: Run unit tests with coverage
          command: |
            mkdir -p test-results
            uv run pytest tests/src/tests/unit/ \
              --cov=mail_api --cov=mail_gmail_impl \
              --junitxml=test-results/unit-results.xml
            uv run coverage report -m
            uv run coverage html -d coverage-report
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
          destination: unit-test-results
      - store_artifacts:
          path: coverage-report
          destination: coverage-html

  mock-integration-test:
    docker:
      - image: cimg/python:3.11
    steps:
      - setup-env
      - run:
          name: Run CI-friendly integration tests
          command: |
            mkdir -p mock-integration-results
            uv run pytest tests/src/tests/integration/ -v \
              -m ci_friendly \
              --cov=mail_ai_spam_detector \
              --junitxml=mock-integration-results/mock-integration-results.xml
            uv run coverage report -m
      - store_test_results:
          path: mock-integration-results
      - store_artifacts:
          path: mock-integration-results
          destination: mock-integration-test-results

  live-integration-test:
    docker:
      - image: cimg/python:3.11
    steps:
      - setup-env
      - run:
          name: Run live integration tests (skipped by default)
          command: |
            mkdir -p live-integration-results
            SKIP_LIVE_TESTS=1 uv run pytest tests/src/tests/integration/ \
              -m "not ci_friendly" -v \
              --junitxml=live-integration-results/live-integration-results.xml
          environment:
            SKIP_LIVE_TESTS: "1"
      - store_test_results:
          path: live-integration-results
      - store_artifacts:
          path: live-integration-results
          destination: live-integration-test-results

workflows:
  test-all:
    jobs:
      - lint
      - unit-test
      - mock-integration-test
      - live-integration-test
